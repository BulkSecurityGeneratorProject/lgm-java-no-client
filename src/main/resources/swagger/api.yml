# API-first development with OpenAPI
# This file will be used at compile time to generate Spring-MVC endpoint stubs using openapi-generator
openapi: "3.0.1"
info:
    title: "Lgm"
    version: 0.0.1
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
    schemas:
        Player:
            properties:
                id:
                    type: integer
                name:
                    type: string
            required:
                - id
                - name
        GameInfoResponse:
            properties:
                id:
                    type: integer
                join_url:
                    type: string
                players:
                    type: array
                    items:
                        type: object
                        $ref: '#/components/schemas/Player'

            required:
                - id
                - join_url
                - players
        ErrorMessageResponse:
            properties:
                message:
                    type: string
            required:
                - message
        TurnOrders:
            properties:
                orders:
                    type: array
                    items:
                        type: object
                        properties:
                            placeholder:
                                type: string
        TurnResultsResponse:
            properties:
                placeholder:
                    type: string

security:
    -   bearerAuth: []
paths:
    /games:
        post:
            operationId: createGame
            summary: create a new game
            responses:
                '200':
                    description: metadata about newly created game
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GameInfoResponse'
    /games/{id}:
        get:
            operationId: getGame
            summary: get game info
            parameters:
                -   in: path
                    name: id
                    required: true
                    schema:
                        type: integer
            responses:
                '200':
                    description: get request OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GameInfoResponse'
                '400':
                    description: bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessageResponse'
                '403':
                    description: get request denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessageResponse'
                '404':
                    description: not found
        put:
            operationId: joinGame
            summary: join a game
            parameters:
                -   in: path
                    name: id
                    required: true
                    schema:
                        type: integer
            responses:
                '204':
                    description: join request accepted
                '400':
                    description: bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessageResponse'
                '403':
                    description: join request denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessageResponse'
    /turns/{id}:
        get:
            operationId: turnResults
            summary: get turn results
            parameters:
                -   in: path
                    name: id
                    required: true
                    schema:
                        type: integer
            responses:
                '200':
                    description: turn results
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TurnResultsResponse'
        post:
            operationId: postOrders
            summary: post turn orders
            parameters:
                -   in: path
                    name: id
                    required: true
                    schema:
                        type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TurnOrders'
            responses:
                '202':
                    description: accepted
                '400':
                    description: bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessageResponse'
